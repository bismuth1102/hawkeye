apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'

def getKeyPass() {
    def keysFile = file("keystore.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def keyPass = keysProperties['keyPassword']
    return keyPass
}

def getEndpoint() {
    def keysFile = file("keystore.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def endpoint = keysProperties['endpoint']
    return endpoint
}

def getAlias() {
    def keysFile = file("keystore.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def alias = keysProperties['alias']
    return alias
}

def getClientID() {
    def keysFile = file("keystore.properties")
    def keysProperties = new Properties()
    keysProperties.load(new FileInputStream(keysFile))
    def clientID = keysProperties['clientID']
    return clientID
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.skillion.hawkeye"
        minSdkVersion 27 // do not change this
        targetSdkVersion 29
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                arguments "-DANDROID_ARM_NEON=TRUE",'-DANDROID_STL=c++_shared'
            }
        }
    }

    packagingOptions {
        pickFirst 'lib/x86_64/libopencv_java4.so'
        pickFirst 'lib/x86/libopencv_java4.so'
        pickFirst 'lib/arm64-v8a/libopencv_java4.so'
        pickFirst 'lib/armeabi-v7a/libopencv_java4.so'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "keyPassword", "\"" + getKeyPass() + "\"")
            buildConfigField("String", "endpoint", "\"" + getEndpoint() + "\"")
            buildConfigField("String", "clientID", "\"" + getClientID() + "\"")
            buildConfigField("String", "alias", "\"" + getAlias() + "\"")
        }
        debug {
            buildConfigField("String", "keyPassword", "\"" + getKeyPass() + "\"")
            buildConfigField("String", "endpoint", "\"" + getEndpoint() + "\"")
            buildConfigField("String", "clientID", "\"" + getClientID() + "\"")
            buildConfigField("String", "alias", "\"" + getAlias() + "\"")
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    buildFeatures {
        mlModelBinding true
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'
apply from:'download_model.gradle'


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'com.amazonaws:aws-android-sdk-iot:2.16.+'
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.16.+'
    implementation 'org.bouncycastle:bcprov-jdk16:1.46'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0-rc1'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0-rc1'
//    implementation project(path: ':java')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.amazonaws:aws-android-sdk-iot:2.16.12'
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.16.12'
    implementation 'org.bouncycastle:bcprov-jdk16:1.46'
    implementation 'com.squareup:seismic:1.0.2'
    implementation 'com.github.jiangdongguo:AndroidUSBCamera:2.3.4'
    implementation 'com.github.razerdp:BasePopup:2.2.20'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
}
